# 11729. 하노이 탑 이동 순서
# 1s, 256MB

# N개의 원판과 세 칸으로 된 하노이 탑
# 첫 칸에 큰 순서대로 쌓여있고, 마지막 칸으로 이동시키려고 할 때,
# 최소 이동 횟수가 되게 하는 이동 순서 = ?
N = int(input())

# 정확한 원리는 모르겠는데 계산해보니까 
# 2^N - 1이라는 규칙을 찾을 수 있었음.
K = 2**N - 1 
print(K)

# 원리를 찾아보자.
# 1개일 땐 1
# 2개일 때부터는 ... 
#                   1번 장대의 [0]을 제외한 N-1개를 2번 장대에 넣음
#                   1번 장대의 [0]을 3번 장대에 넣음
#                   2번 장대에 넣어둔 N-1개를 3번 장대에 넣음
# 즉,
# 1번 -> (3번) -> 2번: N-1개
# 1번 -> 3번 : 1개
# 2번 -> (1번) -> 3번: N-1개
def move(_from, to):
    print(_from, to)

def hanoi(N, _from, via, to):

    if N == 1:
        move(_from, to)
        return
    
    hanoi(N - 1, _from, to, via)
    move(_from, to)
    hanoi(N - 1, via, _from, to)

hanoi(N, 1, 2, 3)


# sf
# 생각(설계)하고 구현하기
# 정리해두기